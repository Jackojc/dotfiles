# LSPs
[language-server.clangd]
command = "clangd"
args = [ "-header-insertion=never", "--clang-tidy" ]

# [language-server.clang-format]
# command = "clang-format"

# [language-server.meson-format]
# command = "meson format"

[language-server.tinymist]  # Typst
command = "tinymist"
config = { exportPdf = "never" }

[language-server.pyright]  # Python
command = "pyright-langserver"
arsg = [ "--stdio" ]

# [language-server.black]  # Python
# command = "black"
# arsg = ["--quiet", "-"]

# Languages
[[language]]
name = "bash"
language-id = "bash"
auto-format = false
indent = { tab-width = 4, unit = "\t" }

[[language]]
name = "meson"
language-id = "meson"
file-types = [ { glob = "meson.build" }, { glob = "meson_options.txt" } ]
roots = [ "meson.build", "meson_options.txt" ]
indent = { tab-width = 2, unit = "  " }
# language-servers = [ "meson-format" ]
formatter = { command = "meson format", args = [] }

[[language]]
name = "cpp"
language-id = "cpp"
file-types = [ "cpp", "hpp", "cxx", "hxx", "h" ]
roots = [ "CMakeLists.txt", "Makefile" ]
auto-format = true
indent = { tab-width = 4, unit = "\t" }
language-servers = [ "clangd" ]
formatter = { command = "clang-format", args = [] }

[[language]]
name = "c"
language-id = "c"
file-types = [ "c", "h" ]
roots = [ "Makefile" ]
auto-format = true
indent = { tab-width = 4, unit = "\t" }
language-servers = [ "clangd" ]
formatter = { command = "clang-format", args = [] }

[[language]]
name = "typst"
scope = "source.typst"
file-types = ["typst", "typ"]
# indent = { tab-width = 2, unit = "  " }
comment-token = "//"
injection-regex = "typ(st)?"
roots = ["typst.toml"]
language-servers = ["tinymist"]

[[language]]
name = "python"
language-id = "python"
file-types = [ "py" ]
roots = ["pyproject.toml", "setup.py", "Poetry.lock", ".git"]
auto-format = true
language-servers = [ "pyright" ]
formatter = { command = "black", args = ["-", "-q"] }

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'$' = '$'
'"' = '"'
